{"version":3,"sources":["components/Navbar/Navbar.jsx","components/RoomsTable/columns.js","components/RoomsTable/GlobalFilter.js","components/Form/Form.jsx","components/RoomsTable/RoomsTable.jsx","components/BookingsTable/columns.js","components/BookingsTable/GlobalFilter.js","components/BookingsTable/BookingsTable.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Navbar","className","theme","defaultSelectedKeys","COLUMNS","accessor","sticky","GlobalFilter","filter","setFilter","useState","setValue","onChange","useAsyncDebounce","value","undefined","htmlFor","id","e","target","ModalPrueba","Select","Option","props","isModalVisible","setIsModalVisible","inputFirstName","inputLastName","inputCheckIn","inputCheckOut","selectCategory","selectNumberGuests","handleOk","handleCancel","type","onClick","title","visible","onOk","onCancel","footer","Formulario","setInputFirstName","setInputLastName","setInputCheckIn","setInputCheckOut","setSelectCategory","setSelectNumberGuest","placeholder","onInput","required","name","RoomsTable","loadingData","setLoadingData","columns","useMemo","data","setData","useEffect","a","axios","get","then","response","console","log","getData","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","table","filename","sheet","buttonText","disableFilters","Cell","format","Date","azButton","setAzButton","FilteringTable","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d8048f00.chunk.js","sourcesContent":["import './Navbar.sass';\r\nimport { Layout, Menu } from 'antd';\r\nconst { Header} = Layout;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <Header className=\"header\">\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} className=\"menu-item\">\r\n                {/* <Menu.Item className=\"item\">\r\n                    Home\r\n                </Menu.Item>\r\n                <Menu.Item className=\"item\">\r\n                    Formulario\r\n                </Menu.Item> */}\r\n            </Menu>\r\n            </Header>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const COLUMNS = [\r\n  {\r\n    Header: 'Categoría',\r\n    accessor: 'category',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Ocupación max',\r\n    accessor: 'max_occupancy',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Ocupación actual',\r\n    accessor: 'occupancy',\r\n    sticky: 'left'\r\n  }\r\n]\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { useAsyncDebounce } from 'react-table'\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n\r\n  const [value, setValue] = useState(filter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setFilter(value || undefined)\r\n  }, 1000)\r\n\r\n  return (\r\n    <span className=\"data-filter-box\">\r\n      <label htmlFor=\"categoryFilter\" className=\"globalfilter-label\">Filtrar por categoria: </label>\r\n      <select id=\"categoryFilter\" className=\"globalfilter-input\" onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}>\r\n        <option value=''>Todos</option>\r\n        <option value='Confort'>Confort</option>\r\n        <option value='Superior'>Superior</option>\r\n        <option value='Junior Suite' >Junior Suite</option>\r\n        <option value='Senior Suite' >Senior Suite</option>\r\n      </select>\r\n    </span>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { useState } from 'react';\r\nimport './Form.sass'\r\nimport { Form, Input, DatePicker, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nconst Formulario = () => {    \r\n    const [inputFirstName, setInputFirstName] = useState('');\r\n    const [inputLastName, setInputLastName] = useState('');\r\n    const [inputCheckIn, setInputCheckIn] = useState('');\r\n    const [inputCheckOut, setInputCheckOut] = useState('');\r\n    const [selectCategory, setSelectCategory] = useState('Confort');\r\n    const [selectNumberGuests, setSelectNumberGuest] = useState('1');\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\" onClick={showModal} className=\"btn-modal\">\r\n               Cargar nueva reserva\r\n            </Button>\r\n            <Modal title=\"Cargar nueva reserva\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n        footer={[            \r\n            <ModalPrueba \r\n            inputFirstName={inputFirstName} \r\n            inputLastName={inputLastName}\r\n            inputCheckIn={inputCheckIn}\r\n            inputCheckOut={inputCheckOut}\r\n            selectCategory={selectCategory}\r\n            selectNumberGuests={selectNumberGuests}\r\n            />,\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Cancelar\r\n            </Button>\r\n          ]}>\r\n            <form>\r\n                <label htmlFor=\"first_name\">Nombre:</label>\r\n                <input type=\"text\" id=\"first_name\" placeholder=\"Nombre\" value={inputFirstName} onInput={e => setInputFirstName(e.target.value)} required/>   \r\n\r\n                <label htmlFor=\"last_name\">Apellido:</label>\r\n                <input type=\"text\" id=\"last_name\" placeholder=\"Apellido\" value={inputLastName} onInput={e => setInputLastName(e.target.value)} required/>\r\n\r\n                <label htmlFor=\"check_in_date\">Fecha Check In:</label>\r\n                <input type=\"date\" id=\"check_in_date\" value={inputCheckIn} onInput={e => setInputCheckIn(e.target.value)} required/>\r\n\r\n                <label htmlFor=\"check_out_date\">Fecha Check Out:</label>\r\n                <input type=\"date\" id=\"check_out_date\" value={inputCheckOut} onInput={e => setInputCheckOut(e.target.value)} required/>\r\n\r\n                <label htmlFor=\"category\">Categoria:</label>\r\n                <select name=\"category\" id=\"category\" value={selectCategory} onInput={e => setSelectCategory(e.target.value)}>\r\n                <option value='Confort'>Confort</option>\r\n                <option value='Superior'>Superior</option>\r\n                <option value='Junior Suite'>Junior Suite</option>\r\n                <option value='Senior Suite'>Senior Suite</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"number_of_guests\">Número de invitados:</label>\r\n                <select name=\"number_of_guests\" id=\"number_of_guests\" value={selectNumberGuests} onInput={e => setSelectNumberGuest(e.target.value)}>\r\n                <option value='1'>1</option>\r\n                <option value='2'>2</option>\r\n                <option value='3'>3</option>\r\n                <option value='4'>4</option>\r\n                </select>                               \r\n            </form>                          \r\n          </Modal>\r\n        </div>\r\n    );\r\n};\r\n/* const ModalFormulario = () => {\r\n\r\n} */\r\n\r\nconst ModalPrueba = (props) => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n   const {\r\n    inputFirstName,\r\n    inputLastName,\r\n    inputCheckIn,\r\n    inputCheckOut,\r\n    selectCategory,\r\n    selectNumberGuests\r\n   } = props\r\n\r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Button type=\"primary\" onClick={showModal}>\r\n          Enviar\r\n        </Button>\r\n        <Modal title=\"Confirmación de reserva\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n        footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Cancelar\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n              Confirmar reserva\r\n            </Button>,\r\n          ]}\r\n        >\r\n            <p>Nombre: {inputFirstName}</p>\r\n            <p>Apellido: {inputLastName}</p>\r\n            <p>Fecha de Check In: {inputCheckIn}</p>\r\n            <p>Fecha de Check Out: {inputCheckOut}</p>\r\n            <p>Categoría: {selectCategory}</p>\r\n            <p>Número de invitados: {selectNumberGuests}</p>      \r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Formulario;","import './RoomsTable.sass';\r\nimport React, { useMemo } from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, useSortBy } from 'react-table'\r\nimport { COLUMNS } from './columns'\r\n//import './table.css'\r\nimport { GlobalFilter } from './GlobalFilter'\r\nimport axios from \"axios\"\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport Form from '../Form';\r\n\r\nconst RoomsTable = () => {\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const columns = useMemo(() => COLUMNS, [])  \r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      await axios\r\n        .get(\"https://api-challenge.blockinar.io/rooms\")\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setData(response.data);\r\n          setLoadingData(false);\r\n        });\r\n    }\r\n    if (loadingData) {\r\n      getData();\r\n    }\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy\r\n  )\r\n\r\n  const { globalFilter } = state   \r\n \r\n \r\n  return (\r\n    <>\r\n    {loadingData ? (\r\n        <p>Loading Please wait...</p>\r\n      ) : (\r\n      <div className=\"table-and-filter\">\r\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />        \r\n        <span className=\"text\">Para ordenar alfabéticamente, presione en el título de cada columna.</span>\r\n        <table {...getTableProps()} id=\"tablaRooms\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map(row => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>        \r\n        </table>\r\n\r\n      <div className=\"download-box\">\r\n          <ReactHTMLTableToExcel\r\n            id=\"botonExportarExcel\"\r\n            className=\"download-xls-button\"\r\n            table=\"tablaRooms\"\r\n            filename=\"Tabla1\"\r\n            sheet=\"Página 1\"\r\n            buttonText=\"Exportar a Excel\"\r\n          />\r\n        <Form />\r\n      </div>\r\n\r\n      </div>\r\n     )    \r\n    \r\n    }\r\n     \r\n    </>\r\n  )\r\n}\r\nexport default RoomsTable","import { format } from 'date-fns'\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: 'Room id',\r\n    accessor: 'room_id',\r\n    disableFilters: true,\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'First Name',\r\n    accessor: 'first_name',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Last Name',\r\n    accessor: 'last_name',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Fecha de check in',\r\n    accessor: 'check_in_date',\r\n    sticky: 'left',\r\n    Cell: ({ value }) => {\r\n      return format(new Date(value), 'dd-MM-yyyy')\r\n    }\r\n  },\r\n  {\r\n    Header: 'Fecha de Check out',\r\n    accessor: 'check_out_date',\r\n    sticky: 'left',\r\n    Cell: ({ value }) => {\r\n      return format(new Date(value), 'dd-MM-yyyy')\r\n    }\r\n  },\r\n  {\r\n    Header: 'Número de invitados',\r\n    accessor: 'number_of_guests',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Precio por noche',\r\n    accessor: 'price_per_night',\r\n    sticky: 'left'\r\n  },\r\n  {\r\n    Header: 'Estado',\r\n    accessor: 'booking_status',\r\n    sticky: 'left'\r\n  },\r\n]\r\n\r\n","import React, { useState } from 'react'\r\nimport { useAsyncDebounce } from 'react-table'\r\nimport './BookingsTable.sass';\r\nimport { Input, Button } from 'antd';\r\n\r\nexport const GlobalFilter = ({ filter, setFilter, azButton, setAzButton }) => {\r\n  const [value, setValue] = useState(filter)\r\n  const [valueButton, setValueButton] = useState(filter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setFilter(value || undefined)\r\n  }, 1000)\r\n  return (\r\n    <span className=\"data-filter-box\">\r\n      <label htmlFor=\"fecha\" className=\"globalfilter-label\">Filtrar por fecha: </label>\r\n      <Input type=\"date\" name=\"fecha\" id=\"fecha\" className=\"globalfilter-input\"\r\n      value={value || ''}\r\n      onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}/>\r\n\r\n    {/* <label htmlFor=\"alfabeticamente\" className=\"globalfilter-label\">Ordenar alfabéticamente: </label>\r\n    <Button value={value || ''} onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}>A/Z</Button> */}\r\n    </span>\r\n  )\r\n};\r\n","import React, { useMemo } from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport { useTable, useFilters, useGlobalFilter, useSortBy } from 'react-table'\r\nimport { COLUMNS } from './columns'\r\nimport { GlobalFilter } from './GlobalFilter'\r\nimport axios from \"axios\"\r\nimport './BookingsTable.sass'\r\n\r\nconst FilteringTable = () => {\r\n  const [loadingData, setLoadingData] = useState(true);\r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const [data, setData] = useState([]);\r\n  const [azButton, setAzButton] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      await axios\r\n        .get(\"https://api-challenge.blockinar.io/bookings\")\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setData(response.data);\r\n          setLoadingData(false);\r\n        });\r\n    }\r\n    if (loadingData) {\r\n      getData();\r\n    }\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy\r\n  )\r\n\r\n  const { globalFilter } = state   \r\n \r\n  return (\r\n    <>\r\n    {loadingData ? (\r\n        <p>Loading Please wait...</p>\r\n      ) : (\r\n      <div className=\"table-and-filter\">\r\n        <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} azButton={azButton} setAzButton={setAzButton}/>\r\n        <span className=\"text\">Para ordenar alfabéticamente, presione en el título de cada columna.</span>\r\n        \r\n        <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render('Header')}\r\n                <span>\r\n                  {column.isSorted\r\n                    ? column.isSortedDesc\r\n                      ? ' 🔽'\r\n                      : ' 🔼'\r\n                    : ''}\r\n                </span>\r\n              </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>        \r\n      </table>\r\n      </div>\r\n\r\n     )\r\n    \r\n    \r\n    }\r\n     \r\n    </>\r\n  )\r\n}\r\nexport default FilteringTable","import React from 'react';\nimport Navbar from './components/Navbar';\nimport RoomsTable from './components/RoomsTable';\nimport BookingsTable from './components/BookingsTable';\nimport './App.sass';\n\nfunction App() {\n  return (\n    <div className=\"principal-box\">\n      <Navbar />\n      <div className=\"table-components\">        \n        <RoomsTable />\n        <BookingsTable />\n      </div>       \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}